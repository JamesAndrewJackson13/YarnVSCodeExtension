{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Yarn",
    "patterns": [
        {
            "include": "#title"
        },
        {
            "include": "#metadata"
        },
        {
            "include": "#content"
        }
    ],
    "repository": {
        "variable": {
            "name": "variable.name.yarn",
            "match": "(\\s|\\b|\\(|\\<)(\\$.+?)(\\s|\\b|\\)|\\.|\\>)"
        },
        "strings": {
            "name": "string.quoted.yarn",
            "begin": "([\"]|['])",
            "end": "$1",
            "patterns": [
                {
                    "name": "constant.character.escape.yarn",
                    "match": "\\\\."
                }
            ]
        },
        "float": {
            "name": "constant.numeric.float.yarn",
            "match": "\\b(\\d+)\\b"
        },
        "bool": {
            "name": "constant.language.boolean.yarn",
            "match": "\\b(true|false)\\b"
        },
        "null": {
            "name": "constant.language.null.yarn",
            "match": "\\b(null)\\b"
        },
        "compare": {
            "name": "keyword.operator.compare.yarn",
            "match": "and|le|gt|or|leq|geq|eq|is|neq|not|&|<|>|`|<=|>=|==|!=|!"
        },
        "operator": {
            "name": "keyword.operator.yarn",
            "match": "[+-/*]"
        },
        "function": {
            "name": "entity.name.function.yarn",
            "match": "([a-z0-9]+?)\\((.*)\\)",
            "captures": {
                "2": {
                    "patterns": [
                        {
                            "include": "#variable"
                        },
                        {
                            "include": "#strings"
                        },
                        {
                            "include": "#float"
                        },
                        {
                            "include": "#bool"
                        },
                        {
                            "include": "#null"
                        },
                        {
                            "include": "#compare"
                        },
                        {
                            "include": "#operator"
                        },
                        {
                            "include": "#function"
                        }
                    ]
                }
            }
        },
        "setCommand": {
            "name": "keyword.control",
            "begin": "(<<)(set)\\s",
            "end": "(>>)",
            "beginCaptures": {
                "1": {
                    "name": "keyword.operator"
                },
                "2": {
                    "name": "constant.language"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [
                {
                    "include": "#variable"
                },
                {
                    "include": "#strings"
                },
                {
                    "include": "#float"
                },
                {
                    "include": "#bool"
                },
                {
                    "include": "#null"
                },
                {
                    "include": "#compare"
                },
                {
                    "include": "#operator"
                },
                {
                    "include": "#function"
                }
            ]
        },
        "command": {
            "name": "keyword.control",
            "begin": "(<<)(\\S+)\\s*",
            "end": "(>>)",
            "beginCaptures": {
                "1": {
                    "name": "entity.other"
                },
                "2": {
                    "name": "entity.name.function"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "entity.other"
                }
            },
            "patterns": [
                {
                    "include": "#variable"
                },
                {
                    "include": "#strings"
                },
                {
                    "include": "#float"
                },
                {
                    "include": "#bool"
                },
                {
                    "include": "#null"
                },
                {
                    "include": "#compare"
                },
                {
                    "include": "#operator"
                },
                {
                    "include": "#function"
                }
            ]
        },
        "ifCommand": {
            "name": "entity.other.command.yarn",
            "begin": "(<<)(elseif|if)",
            "end": "(>>)",
            "beginCaptures": {
                "1": {
                    "name": "entity.other"
                },
                "2": {
                    "name": "keyword.control"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "entity.other"
                }
            },
            "patterns": [
                {
                    "include": "#variable"
                },
                {
                    "include": "#strings"
                },
                {
                    "include": "#float"
                },
                {
                    "include": "#bool"
                },
                {
                    "include": "#null"
                },
                {
                    "include": "#compare"
                },
                {
                    "include": "#operator"
                },
                {
                    "include": "#function"
                }
            ]
        },
        "elseCommand": {
            "name": "entity.other.command.yarn",
            "match": "<<(else)>>",
            "captures": {
                "1": {
                    "name": "keyword.control.conditional.else.yarn"
                }
            }
        },
        "endifCommand": {
            "name": "entity.other.command.yarn",
            "match": "<<(endif)>>",
            "captures": {
                "1": {
                    "name": "keyword.control.conditional.endif.yarn"
                }
            }
        },
        "link": {
            "name": "meta.link",
            "begin": "\\[\\[",
            "end": "\\]\\]",
            "patterns": [
                {
                    "match": "(.+?)([|])",
                    "captures": {
                        "1": {
                            "name": "string.unquoted.optionText.yarn"
                        },
                        "2": {
                            "name": "keyword"
                        }
                    }
                },
                {
                    "name": "entity.name.section.nodeTitle.yarn",
                    "match": "[^\\]]+"
                }
            ]
        },
        "option": {
            "name": "keyword.control.option.yarn",
            "match": "^\\s*?->([^<]+)",
            "captures": {
                "1": {
                    "name": "string.unquoted.optionText.yarn"
                }
            }
        },
        "speaker": {
            "name": "meta.dialog.with_speaker.yarn",
            "match": "\\s*?(.+?)(:)",
            "captures": {
                "1": {
                    "name": "entity.name"
                },
                "2": {
                    "name": "punctuation.speaker.yarn"
                }
            }
        },
        "_bbcode": {
            "name": "markup.bbcode.yarn",
            "begin": "\\[(b)\\]",
            "end": "\\[[/]($1)\\]",
            "beginCaptures": {
                "1": {
                    "name": "entity.other.attribute-name"
                },
                "2": {
                    "name": "entity.other"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "entity.other.attribute-name"
                }
            }
        },
        "bbcode": {
            "name": "markup.bbcode.yarn",
            "begin": "(\\[)([^\\[\\]]+?)(?:([=])([^\\[\\]]+*))?(\\])",
            "end": "(\\[[/])(\\2)(\\])",
            "beginCaptures": {
                "1": {
                    "name": "markup.bbcode.open.yarn"
                },
                "2": {
                    "name": "entity.other.attribute-name.yarn"
                },
                "3": {
                    "name": "punctuation.bbcodeAttribute.yarn"
                },
                "4": {
                    "name": "variable.bbcode.attribute.yarn"
                },
                "5": {
                    "name": "markup.bbcode.close.yarn"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "markup.bbcode.open.yarn"
                },
                "2": {
                    "name": "entity.other.attribute-name.yarn"
                },
                "3": {
                    "name": "markup.bbcode.close.yarn"
                }
            },
            "patterns": [
                {
                    "include": "#bbcode"
                },
                {
                    "name": "string.unquoted.dialog.word.yarn",
                    "match": "[^\\[\\]]+?"
                }
            ]
        },
        "title": {
            "name": "meta.title",
            "match": "^\\s*?(title)\\s*?(:)\\s*?(.+?)\\s*?$",
            "captures": {
                "1": {
                    "name": "support.type.property-name.title.yarn"
                },
                "2": {
                    "name": "punctuation.attribute.yarn"
                },
                "3": {
                    "name": "entity.name.section.nodeTitle.yarn"
                }
            }
        },
        "metadata": {
            "name": "meta.metadata",
            "match": "^\\s*?(.+?)\\s*?(:)\\s*?(.+?)\\s*?$",
            "captures": {
                "1": {
                    "name": "support.type.property-name.metatag.yarn"
                },
                "2": {
                    "name": "punctuation.attribute.yarn"
                },
                "3": {
                    "name": "entity.name"
                }
            }
        },
        "content": {
            "name": "meta.selector",
            "begin": "---",
            "end": "===",
            "captures": {
                "0": {
                    "name": "entity.name.selector"
                }
            },
            "patterns": [
                {
                    "include": "#bbcode"
                },
                {
                    "include": "#ifCommand"
                },
                {
                    "include": "#elseCommand"
                },
                {
                    "include": "#endifCommand"
                },
                {
                    "include": "#command"
                },
                {
                    "include": "#link"
                },
                {
                    "include": "#option"
                },
                {
                    "include": "#speaker"
                }
            ]
        }
    },
    "scopeName": "source.yarn"
}